USE [GD2C2020]
GO

--FUNCION AUX

IF OBJECT_ID ('EL_KUELGUE.OBTENER_MES', 'FN') IS NOT NULL  
   DROP FUNCTION EL_KUELGUE.OBTENER_MES; 
GO

CREATE FUNCTION EL_KUELGUE.OBTENER_MES (@MES INT)
RETURNS CHAR(12)
AS
BEGIN
	DECLARE @RETORNO_MES CHAR(12)
	
	SET @RETORNO_MES = CASE
				WHEN @MES = 1 THEN 'ENERO'
				WHEN @MES = 2 THEN 'FEBRERO'
				WHEN @MES = 3 THEN 'MARZO'
				WHEN @MES = 4 THEN 'ABRIL'
				WHEN @MES = 5 THEN 'MAYO'
				WHEN @MES = 6 THEN 'JUNIO'
				WHEN @MES = 7 THEN 'JULIO'
				WHEN @MES = 8 THEN 'AGOSTO'
				WHEN @MES = 9 THEN 'SEPTIEMBRE'
				WHEN @MES = 10 THEN 'OCTUBRE'
				WHEN @MES = 11 THEN 'NOVIEMBRE'
				WHEN @MES = 12 THEN 'DICIEMBRE'
	END
	RETURN @RETORNO_MES
END; 
GO

--DIMENSION FACTURA_FECHA

IF OBJECT_ID ('EL_KUELGUE.BI_FACTURA_FECHA', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_FACTURA_FECHA; 
GO

CREATE TABLE EL_KUELGUE.BI_FACTURA_FECHA (
	ID_FACTURA_FECHA DATETIME2(3) PRIMARY KEY,
	DIA INT,
	MES INT,
	ANIO INT)

INSERT INTO EL_KUELGUE.BI_FACTURA_FECHA (ID_FACTURA_FECHA, DIA, MES, ANIO)
SELECT FACTURA_FECHA, DATEPART(DAY, FACTURA_FECHA) DIA, DATEPART(MONTH, FACTURA_FECHA) MES, DATEPART(YEAR, FACTURA_FECHA) ANIO
FROM EL_KUELGUE.FACTURA
GROUP BY FACTURA_FECHA
ORDER BY DATEPART(DAY, FACTURA_FECHA), DATEPART(MONTH, FACTURA_FECHA), DATEPART(YEAR, FACTURA_FECHA)

--DIMENSION COMPRA_FECHA

IF OBJECT_ID ('EL_KUELGUE.BI_COMPRA_FECHA', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_COMPRA_FECHA; 
GO

CREATE TABLE EL_KUELGUE.BI_COMPRA_FECHA (
	ID_COMPRA_FECHA DATETIME2(3) PRIMARY KEY,
	DIA INT,
	MES INT,
	ANIO INT)

INSERT INTO EL_KUELGUE.BI_COMPRA_FECHA (ID_COMPRA_FECHA, DIA, MES, ANIO)
SELECT COMPRA_FECHA, DATEPART(DAY, COMPRA_FECHA) DIA, DATEPART(MONTH, COMPRA_FECHA) MES, DATEPART(YEAR, COMPRA_FECHA) ANIO
FROM EL_KUELGUE.COMPRA
GROUP BY COMPRA_FECHA
ORDER BY DATEPART(DAY, COMPRA_FECHA), DATEPART(MONTH, COMPRA_FECHA), DATEPART(YEAR, COMPRA_FECHA)

--DIMENSION CLIENTE 

IF OBJECT_ID ('EL_KUELGUE.BI_CLIENTE', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_CLIENTE; 
GO

CREATE TABLE EL_KUELGUE.BI_CLIENTE (
	CLIENTE_CODIGO		INT PRIMARY KEY,
	CLIENTE_NOMBRE		NVARCHAR(255),
	CLIENTE_APELLIDO	NVARCHAR(255),
	CLIENTE_DIRECCION	NVARCHAR(255),
	CLIENTE_DNI			DECIMAL(18,0),
	CLIENTE_FECHA_NAC	DATETIME2(3),
	CLIENTE_MAIL		NVARCHAR(255),
	CLIENTE_EDAD		INT)

INSERT INTO EL_KUELGUE.BI_CLIENTE
SELECT CLIENTE_CODIGO, CLIENTE_NOMBRE, CLIENTE_APELLIDO, CLIENTE_DIRECCION, CLIENTE_DNI, CLIENTE_FECHA_NAC, CLIENTE_MAIL, DATEDIFF(yy, CLIENTE_FECHA_NAC, GETDATE()) 
FROM EL_KUELGUE.CLIENTE
ORDER BY CLIENTE_CODIGO

--DIMENSION SUCURSAL

IF OBJECT_ID ('EL_KUELGUE.BI_SUCURSAL', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_SUCURSAL; 
GO

CREATE TABLE EL_KUELGUE.BI_SUCURSAL(
	SUCURSAL_CODIGO		INT PRIMARY KEY,
	SUCURSAL_DIRECCION	NVARCHAR(255),
	SUCURSAL_MAIL		NVARCHAR(255),
	SUCURSAL_TELEFONO	DECIMAL (18,0),
	SUCURSAL_CIUDAD 	NVARCHAR(255))

INSERT INTO EL_KUELGUE.BI_SUCURSAL
SELECT SUCURSAL_CODIGO,SUCURSAL_DIRECCION,SUCURSAL_MAIL,SUCURSAL_TELEFONO,SUCURSAL_CIUDAD
FROM EL_KUELGUE.SUCURSAL
ORDER BY SUCURSAL_CODIGO

-- DIMENSION FABRICANTE
IF OBJECT_ID ('EL_KUELGUE.BI_FABRICANTE', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_FABRICANTE; 
GO

CREATE TABLE EL_KUELGUE.BI_FABRICANTE (
    [FABRICANTE_CODIGO] INT PRIMARY KEY,
	[FABRICANTE_NOMBRE] [nvarchar](255) NOT NULL
)

INSERT INTO EL_KUELGUE.BI_FABRICANTE
SELECT FABRICANTE_CODIGO, FABRICANTE_NOMBRE
FROM EL_KUELGUE.FABRICANTE
ORDER BY FABRICANTE_NOMBRE
 
 -- DIMENSION MODELO
IF OBJECT_ID ('EL_KUELGUE.BI_MODELO', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_MODELO; 
GO

CREATE TABLE EL_KUELGUE.BI_MODELO (
    [MODELO_CODIGO] [decimal](18, 0) PRIMARY KEY,
    [MODELO_NOMBRE] [nvarchar](255) NOT NULL,
	[MODELO_POTENCIA] [decimal](18, 0) NOT NULL)

INSERT INTO EL_KUELGUE.BI_MODELO
SELECT MODELO_CODIGO, MODELO_NOMBRE, MODELO_POTENCIA
FROM EL_KUELGUE.MODELO
ORDER BY MODELO_CODIGO

-- DIMENSION TRANSMISION
IF OBJECT_ID ('EL_KUELGUE.BI_TRANSMISION', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_TRANSMISION; 
GO

CREATE TABLE EL_KUELGUE.BI_TRANSMISION (
    [TIPO_TRANSMISION_CODIGO] [decimal](18, 0) PRIMARY KEY,
	[TIPO_TRANSMISION_DESC] [nvarchar](255) NOT NULL)

INSERT INTO EL_KUELGUE.BI_TRANSMISION
SELECT TIPO_TRANSMISION_CODIGO,TIPO_TRANSMISION_DESC 
FROM EL_KUELGUE.TRANSMISION
ORDER BY TIPO_TRANSMISION_CODIGO

-- DIMENSION CAJA
IF OBJECT_ID ('EL_KUELGUE.BI_CAJA', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_CAJA; 
GO

CREATE TABLE EL_KUELGUE.BI_CAJA (
    [TIPO_CAJA_CODIGO] [decimal](18, 0) PRIMARY KEY,
	[TIPO_CAJA_DESC] [nvarchar](255) NOT NULL)

INSERT INTO EL_KUELGUE.BI_CAJA
SELECT TIPO_CAJA_CODIGO, TIPO_CAJA_DESC
FROM EL_KUELGUE.CAJA
ORDER BY TIPO_CAJA_CODIGO

-- DIMENSION MOTOR
IF OBJECT_ID ('EL_KUELGUE.BI_MOTOR', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_MOTOR; 
GO

CREATE TABLE EL_KUELGUE.BI_MOTOR (
    [TIPO_MOTOR_CODIGO] [decimal](18, 0) PRIMARY KEY)

INSERT INTO EL_KUELGUE.BI_MOTOR
SELECT TIPO_MOTOR_CODIGO
FROM EL_KUELGUE.MOTOR

-- DIMENSION TIPO_AUTOMOVIL
IF OBJECT_ID ('EL_KUELGUE.BI_TIPO_AUTOMOVIL', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_TIPO_AUTOMOVIL; 
GO

CREATE TABLE EL_KUELGUE.BI_TIPO_AUTOMOVIL (
    [TIPO_AUTO_CODIGO] [decimal](18, 0) PRIMARY KEY,
    [TIPO_AUTO_DESC] [nvarchar](255) NOT NULL)

INSERT INTO EL_KUELGUE.BI_TIPO_AUTOMOVIL
SELECT TIPO_AUTO_CODIGO, TIPO_AUTO_DESC
FROM EL_KUELGUE.TIPO_AUTOMOVIL
ORDER BY TIPO_AUTO_CODIGO

-- DIMENSION AUTOMOVIL
IF OBJECT_ID ('EL_KUELGUE.BI_AUTOMOVIL', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_AUTOMOVIL; 
GO

CREATE TABLE EL_KUELGUE.BI_AUTOMOVIL (
    [AUTO_CODIGO] INT PRIMARY KEY,
	[AUTO_PATENTE] [nvarchar](50) NOT NULL,
	[AUTO_NRO_MOTOR] [nvarchar](50) NOT NULL,
	[AUTO_NRO_CHASIS] [nvarchar](50) NOT NULL,
	[AUTO_FECHA_ALTA] [datetime2](3) NOT NULL,
	[AUTO_CANT_KMS] [decimal](18, 0) NOT NULL)

INSERT INTO EL_KUELGUE.BI_AUTOMOVIL
SELECT AUTO_CODIGO, AUTO_PATENTE, AUTO_NRO_MOTOR, AUTO_NRO_CHASIS, AUTO_FECHA_ALTA, AUTO_CANT_KMS
FROM EL_KUELGUE.AUTOMOVIL
ORDER BY AUTO_CODIGO

-- DIMENSION AUTO_PARTE
IF OBJECT_ID ('EL_KUELGUE.BI_AUTO_PARTE', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_AUTO_PARTE; 
GO

CREATE TABLE EL_KUELGUE.BI_AUTO_PARTE (
    [AUTO_PARTE_CODIGO] [decimal](18, 0) PRIMARY KEY,
	[AUTO_PARTE_DESC] [nvarchar](255) NOT NULL)

INSERT INTO EL_KUELGUE.BI_AUTO_PARTE
SELECT AUTO_PARTE_CODIGO, AUTO_PARTE_DESC
FROM EL_KUELGUE.AUTO_PARTE
ORDER BY AUTO_PARTE_CODIGO

-- HECHO COMPRAS_AUTOMOVILES
IF OBJECT_ID ('EL_KUELGUE.BI_HECHOS_COMPRAS_AUTOMOVILES', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_HECHOS_COMPRAS_AUTOMOVILES; 
GO

CREATE TABLE EL_KUELGUE.BI_HECHOS_COMPRAS_AUTOMOVILES(
	[COMPRA_FECHA] [datetime2](3) NOT NULL,
	[CLIENTE_CODIGO] INT NOT NULL,
	[SUCURSAL_CODIGO] INT NOT NULL,
	[AUTO_CODIGO] INT NOT NULL,
	[TIPO_TRANSMISION_CODIGO] [decimal](18, 0) NOT NULL,
	[TIPO_CAJA_CODIGO] [decimal](18, 0) NOT NULL,
	[TIPO_MOTOR_CODIGO] [decimal](18, 0) NOT NULL,
	[TIPO_AUTO_CODIGO] [decimal](18, 0) NOT NULL,
	[MODELO_CODIGO] [decimal](18, 0) NOT NULL,
	[FABRICANTE_CODIGO] [int] NOT NULL,
	[MONTO_COMPRADO] [decimal](18, 2) NOT NULL,

	PRIMARY KEY (COMPRA_FECHA, CLIENTE_CODIGO, SUCURSAL_CODIGO, AUTO_CODIGO, 
				 TIPO_TRANSMISION_CODIGO, TIPO_CAJA_CODIGO, TIPO_MOTOR_CODIGO,
				 TIPO_AUTO_CODIGO, MODELO_CODIGO, FABRICANTE_CODIGO)
)

-- HECHO FACTURAS_AUTOMOVILES
IF OBJECT_ID ('EL_KUELGUE.BI_HECHOS_FACTURAS_AUTOMOVILES', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_HECHOS_FACTURAS_AUTOMOVILES; 
GO

CREATE TABLE EL_KUELGUE.BI_HECHOS_FACTURAS_AUTOMOVILES(
	[FACTURA_FECHA] [datetime2](3) NOT NULL,
	[CLIENTE_CODIGO] INT NOT NULL,
	[SUCURSAL_CODIGO] INT NOT NULL,
	[AUTO_CODIGO] INT NOT NULL,
	[TIPO_TRANSMISION_CODIGO] [decimal](18, 0) NOT NULL,
	[TIPO_CAJA_CODIGO] [decimal](18, 0) NOT NULL,
	[TIPO_MOTOR_CODIGO] [decimal](18, 0) NOT NULL,
	[TIPO_AUTO_CODIGO] [decimal](18, 0) NOT NULL,
	[MODELO_CODIGO] [decimal](18, 0) NOT NULL,
	[FABRICANTE_CODIGO] [int] NOT NULL,
	[MONTO_FACTURADO] [decimal](18, 2) NOT NULL

	PRIMARY KEY (FACTURA_FECHA, CLIENTE_CODIGO, SUCURSAL_CODIGO, AUTO_CODIGO, 
				 TIPO_TRANSMISION_CODIGO, TIPO_CAJA_CODIGO, TIPO_MOTOR_CODIGO,
				 TIPO_AUTO_CODIGO, MODELO_CODIGO, FABRICANTE_CODIGO)
)


-- HECHO COMPRAS_AUTO_PARTES
IF OBJECT_ID ('EL_KUELGUE.BI_HECHOS_COMPRAS_AUTO_PARTES', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_HECHOS_COMPRAS_AUTO_PARTES; 
GO

CREATE TABLE EL_KUELGUE.BI_HECHOS_COMPRAS_AUTO_PARTES(
	[COMPRA_FECHA] [datetime2](3) NOT NULL,
	[CLIENTE_CODIGO] INT NOT NULL,
	[SUCURSAL_CODIGO] INT NOT NULL,
	[AUTO_PARTE_CODIGO] [decimal](18, 0) NOT NULL,
	[MODELO_CODIGO] [decimal](18, 0) NOT NULL,
	[FABRICANTE_CODIGO] [int] NOT NULL,
	[PRECIO_UNITARIO] [decimal](18, 2) NOT NULL,
	[CANTIDAD_COMPRADA] INT NOT NULL

	PRIMARY KEY (COMPRA_FECHA, CLIENTE_CODIGO, SUCURSAL_CODIGO, 
				 AUTO_PARTE_CODIGO, MODELO_CODIGO, FABRICANTE_CODIGO)
)

-- HECHO FACTURAS_AUTO_PARTES
IF OBJECT_ID ('EL_KUELGUE.BI_HECHOS_FACTURAS_AUTO_PARTES', 'U') IS NOT NULL  
   DROP TABLE EL_KUELGUE.BI_HECHOS_FACTURAS_AUTO_PARTES; 
GO

CREATE TABLE EL_KUELGUE.BI_HECHOS_FACTURAS_AUTO_PARTES(
	[FACTURA_FECHA] [datetime2](3) NOT NULL,
	[CLIENTE_CODIGO] INT NOT NULL,
	[SUCURSAL_CODIGO] INT NOT NULL,
	[AUTO_PARTE_CODIGO] [decimal](18, 0) NOT NULL,
	[MODELO_CODIGO] [decimal](18, 0) NOT NULL,
	[FABRICANTE_CODIGO] [int] NOT NULL,
	[PRECIO_UNITARIO] [decimal](18, 2) NOT NULL,
	[CANTIDAD_FACTURADA] INT NOT NULL

	PRIMARY KEY (FACTURA_FECHA, CLIENTE_CODIGO, SUCURSAL_CODIGO, 
				 AUTO_PARTE_CODIGO, MODELO_CODIGO, FABRICANTE_CODIGO)
)

-- CARGA COMPRAS_AUTOMOVILES
INSERT INTO EL_KUELGUE.BI_HECHOS_COMPRAS_AUTOMOVILES 
(COMPRA_FECHA, CLIENTE_CODIGO, SUCURSAL_CODIGO, AUTO_CODIGO, 
TIPO_TRANSMISION_CODIGO, TIPO_CAJA_CODIGO, TIPO_MOTOR_CODIGO, 
TIPO_AUTO_CODIGO, MODELO_CODIGO, FABRICANTE_CODIGO, MONTO_COMPRADO)
SELECT COMPRA_FECHA, CLIENTE_CODIGO, SUCURSAL_CODIGO, CA.AUTO_CODIGO, 
	   TIPO_TRANSMISION_CODIGO, TIPO_CAJA_CODIGO, TIPO_MOTOR_CODIGO, 
	   TIPO_AUTO_CODIGO, M.MODELO_CODIGO, FABRICANTE_CODIGO, COMPRA_PRECIO AS MONTO_COMPRADO
FROM EL_KUELGUE.COMPRA C JOIN EL_KUELGUE.COMPRA_AUTOMOVIL CA ON C.COMPRA_NRO = CA.COMPRA_NRO
						 JOIN EL_KUELGUE.AUTOMOVIL A ON CA.AUTO_CODIGO = A.AUTO_CODIGO
						 JOIN EL_KUELGUE.FICHA_TECNICA_AUTOMOVIL FTA ON A.FICHA_TECNICA_CODIGO = FTA.FICHA_TECNICA_CODIGO
						 JOIN EL_KUELGUE.MODELO M ON FTA.MODELO_CODIGO = M.MODELO_CODIGO

-- CARGA FACTURAS_AUTOMOVILES
INSERT INTO EL_KUELGUE.BI_HECHOS_FACTURAS_AUTOMOVILES 
(FACTURA_FECHA, CLIENTE_CODIGO, SUCURSAL_CODIGO, AUTO_CODIGO, 
TIPO_TRANSMISION_CODIGO, TIPO_CAJA_CODIGO, TIPO_MOTOR_CODIGO, 
TIPO_AUTO_CODIGO, MODELO_CODIGO, FABRICANTE_CODIGO, MONTO_FACTURADO)
SELECT FACTURA_FECHA, CLIENTE_CODIGO, SUCURSAL_CODIGO, FA.AUTO_CODIGO, 
	   TIPO_TRANSMISION_CODIGO, TIPO_CAJA_CODIGO, TIPO_MOTOR_CODIGO, 
	   TIPO_AUTO_CODIGO, M.MODELO_CODIGO, FABRICANTE_CODIGO, FACTURA_PRECIO AS MONTO_FACTURADO
FROM EL_KUELGUE.FACTURA F JOIN EL_KUELGUE.FACTURA_AUTOMOVIL FA ON F.FACTURA_NRO = FA.FACTURA_NRO
						  JOIN EL_KUELGUE.AUTOMOVIL A ON FA.AUTO_CODIGO = A.AUTO_CODIGO
						  JOIN EL_KUELGUE.FICHA_TECNICA_AUTOMOVIL FTA ON A.FICHA_TECNICA_CODIGO = FTA.FICHA_TECNICA_CODIGO
						  JOIN EL_KUELGUE.MODELO M ON FTA.MODELO_CODIGO = M.MODELO_CODIGO

-- CARGA COMPRAS_AUTO_PARTES
INSERT INTO EL_KUELGUE.BI_HECHOS_COMPRAS_AUTO_PARTES
(COMPRA_FECHA, CLIENTE_CODIGO, SUCURSAL_CODIGO, AUTO_PARTE_CODIGO,
MODELO_CODIGO, FABRICANTE_CODIGO, PRECIO_UNITARIO, CANTIDAD_COMPRADA)
SELECT COMPRA_FECHA, CLIENTE_CODIGO, SUCURSAL_CODIGO, CA.AUTO_PARTE_CODIGO, 
	   M.MODELO_CODIGO, FABRICANTE_CODIGO, PRECIO_UNITARIO, SUM(COMPRA_CANT) CANTIDAD_COMPRADA
FROM EL_KUELGUE.COMPRA C JOIN EL_KUELGUE.DETALLE_COMPRA_AUTO_PARTE CA ON C.COMPRA_NRO = CA.COMPRA_NRO
						 JOIN EL_KUELGUE.AUTO_PARTE A ON CA.AUTO_PARTE_CODIGO = A.AUTO_PARTE_CODIGO
						 JOIN EL_KUELGUE.MODELO M ON A.MODELO_CODIGO = M.MODELO_CODIGO
GROUP BY COMPRA_FECHA, CLIENTE_CODIGO, SUCURSAL_CODIGO, CA.AUTO_PARTE_CODIGO, PRECIO_UNITARIO, M.MODELO_CODIGO, FABRICANTE_CODIGO

-- CARGA FACTURAS_AUTO_PARTES
INSERT INTO EL_KUELGUE.BI_HECHOS_FACTURAS_AUTO_PARTES
(FACTURA_FECHA, CLIENTE_CODIGO, SUCURSAL_CODIGO, AUTO_PARTE_CODIGO,
MODELO_CODIGO, FABRICANTE_CODIGO, PRECIO_UNITARIO, CANTIDAD_FACTURADA)
SELECT FACTURA_FECHA, CLIENTE_CODIGO, SUCURSAL_CODIGO, FA.AUTO_PARTE_CODIGO, 
	   M.MODELO_CODIGO, FABRICANTE_CODIGO, PRECIO_UNITARIO, SUM(FACTURA_CANT) CANTIDAD_FACTURADA
FROM EL_KUELGUE.FACTURA F JOIN EL_KUELGUE.DETALLE_FACTURA_AUTO_PARTE FA ON F.FACTURA_NRO = FA.FACTURA_NRO
						 JOIN EL_KUELGUE.AUTO_PARTE A ON FA.AUTO_PARTE_CODIGO = A.AUTO_PARTE_CODIGO
						 JOIN EL_KUELGUE.MODELO M ON A.MODELO_CODIGO = M.MODELO_CODIGO
GROUP BY FACTURA_FECHA, CLIENTE_CODIGO, SUCURSAL_CODIGO, FA.AUTO_PARTE_CODIGO, PRECIO_UNITARIO, M.MODELO_CODIGO, FABRICANTE_CODIGO


-- ********** CREACION CONSTRAINS  **********

--FK BI_HECHOS_COMPRAS_AUTOMOVILES
ALTER TABLE EL_KUELGUE.BI_HECHOS_COMPRAS_AUTOMOVILES
ADD 
	FOREIGN KEY ([COMPRA_FECHA]) REFERENCES EL_KUELGUE.BI_COMPRA_FECHA([ID_COMPRA_FECHA]),
	FOREIGN KEY ([CLIENTE_CODIGO]) REFERENCES EL_KUELGUE.BI_CLIENTE([CLIENTE_CODIGO]),
	FOREIGN KEY ([SUCURSAL_CODIGO]) REFERENCES EL_KUELGUE.BI_SUCURSAL([SUCURSAL_CODIGO]),
	FOREIGN KEY ([AUTO_CODIGO]) REFERENCES EL_KUELGUE.BI_AUTOMOVIL([AUTO_CODIGO]),
	FOREIGN KEY ([TIPO_TRANSMISION_CODIGO]) REFERENCES EL_KUELGUE.BI_TRANSMISION([TIPO_TRANSMISION_CODIGO]),
	FOREIGN KEY ([TIPO_CAJA_CODIGO]) REFERENCES EL_KUELGUE.BI_CAJA([TIPO_CAJA_CODIGO]),
	FOREIGN KEY ([TIPO_MOTOR_CODIGO]) REFERENCES EL_KUELGUE.BI_MOTOR([TIPO_MOTOR_CODIGO]),
	FOREIGN KEY ([TIPO_AUTO_CODIGO]) REFERENCES EL_KUELGUE.BI_TIPO_AUTOMOVIL([TIPO_AUTO_CODIGO]),
	FOREIGN KEY ([MODELO_CODIGO]) REFERENCES EL_KUELGUE.BI_MODELO([MODELO_CODIGO]),
	FOREIGN KEY ([FABRICANTE_CODIGO]) REFERENCES EL_KUELGUE.BI_FABRICANTE([FABRICANTE_CODIGO]);
GO

--FK BI_HECHOS_FACTURAS_AUTOMOVILES
ALTER TABLE EL_KUELGUE.BI_HECHOS_FACTURAS_AUTOMOVILES
ADD 
	FOREIGN KEY ([FACTURA_FECHA]) REFERENCES EL_KUELGUE.BI_FACTURA_FECHA([ID_FACTURA_FECHA]),
	FOREIGN KEY ([CLIENTE_CODIGO]) REFERENCES EL_KUELGUE.BI_CLIENTE([CLIENTE_CODIGO]),
	FOREIGN KEY ([SUCURSAL_CODIGO]) REFERENCES EL_KUELGUE.BI_SUCURSAL([SUCURSAL_CODIGO]),
	FOREIGN KEY ([AUTO_CODIGO]) REFERENCES EL_KUELGUE.BI_AUTOMOVIL([AUTO_CODIGO]),
	FOREIGN KEY ([TIPO_TRANSMISION_CODIGO]) REFERENCES EL_KUELGUE.BI_TRANSMISION([TIPO_TRANSMISION_CODIGO]),
	FOREIGN KEY ([TIPO_CAJA_CODIGO]) REFERENCES EL_KUELGUE.BI_CAJA([TIPO_CAJA_CODIGO]),
	FOREIGN KEY ([TIPO_MOTOR_CODIGO]) REFERENCES EL_KUELGUE.BI_MOTOR([TIPO_MOTOR_CODIGO]),
	FOREIGN KEY ([TIPO_AUTO_CODIGO]) REFERENCES EL_KUELGUE.BI_TIPO_AUTOMOVIL([TIPO_AUTO_CODIGO]),
	FOREIGN KEY ([MODELO_CODIGO]) REFERENCES EL_KUELGUE.BI_MODELO([MODELO_CODIGO]),
	FOREIGN KEY ([FABRICANTE_CODIGO]) REFERENCES EL_KUELGUE.BI_FABRICANTE([FABRICANTE_CODIGO]);
GO

--FK BI_HECHOS_COMPRAS_AUTO_PARTES
ALTER TABLE EL_KUELGUE.BI_HECHOS_COMPRAS_AUTO_PARTES
ADD 
	FOREIGN KEY ([COMPRA_FECHA]) REFERENCES EL_KUELGUE.BI_COMPRA_FECHA([ID_COMPRA_FECHA]),
	FOREIGN KEY ([CLIENTE_CODIGO]) REFERENCES EL_KUELGUE.BI_CLIENTE([CLIENTE_CODIGO]),
	FOREIGN KEY ([SUCURSAL_CODIGO]) REFERENCES EL_KUELGUE.BI_SUCURSAL([SUCURSAL_CODIGO]),
	FOREIGN KEY ([AUTO_PARTE_CODIGO]) REFERENCES EL_KUELGUE.BI_AUTO_PARTE([AUTO_PARTE_CODIGO]),
	FOREIGN KEY ([MODELO_CODIGO]) REFERENCES EL_KUELGUE.BI_MODELO([MODELO_CODIGO]),
	FOREIGN KEY ([FABRICANTE_CODIGO]) REFERENCES EL_KUELGUE.BI_FABRICANTE([FABRICANTE_CODIGO]);
GO

--FK BI_HECHOS_FACTURAS_AUTO_PARTES
ALTER TABLE EL_KUELGUE.BI_HECHOS_FACTURAS_AUTO_PARTES
ADD 
	FOREIGN KEY ([FACTURA_FECHA]) REFERENCES EL_KUELGUE.BI_FACTURA_FECHA([ID_FACTURA_FECHA]),
	FOREIGN KEY ([CLIENTE_CODIGO]) REFERENCES EL_KUELGUE.BI_CLIENTE([CLIENTE_CODIGO]),
	FOREIGN KEY ([SUCURSAL_CODIGO]) REFERENCES EL_KUELGUE.BI_SUCURSAL([SUCURSAL_CODIGO]),
	FOREIGN KEY ([AUTO_PARTE_CODIGO]) REFERENCES EL_KUELGUE.BI_AUTO_PARTE([AUTO_PARTE_CODIGO]),
	FOREIGN KEY ([MODELO_CODIGO]) REFERENCES EL_KUELGUE.BI_MODELO([MODELO_CODIGO]),
	FOREIGN KEY ([FABRICANTE_CODIGO]) REFERENCES EL_KUELGUE.BI_FABRICANTE([FABRICANTE_CODIGO]);
GO

-- REQUERIMIENTOS FUNCIONALES --

------------------------------------------------------------------------------------------------------------------------------------
-- Cantidad de automóviles, vendidos y comprados x sucursal y mes

IF OBJECT_ID ('EL_KUELGUE.BI_REPORTE_CANTIDADES_AUTOMOVILES_V', 'V') IS NOT NULL  
   DROP VIEW EL_KUELGUE.BI_REPORTE_CANTIDADES_AUTOMOVILES_V; 
GO

CREATE VIEW EL_KUELGUE.BI_REPORTE_CANTIDADES_AUTOMOVILES_V
(SUCURSAL, CANTIDADES_COMPRADAS, CANTIDADES_FACTURADAS, MES, NOMBRE_MES, ANIO)
AS
SELECT SUCURSAL_CODIGO, CANTIDADES_COMPRADAS, CANTIDADES_FACTURADAS, MES, NOMBRE_MES, ANIO
FROM (SELECT COALESCE(C1.SUCURSAL_CODIGO, F1.SUCURSAL_CODIGO) SUCURSAL_CODIGO, 
			 COALESCE(CANTIDADES_COMPRADAS, 0) CANTIDADES_COMPRADAS, 
			 COALESCE(CANTIDADES_FACTURADAS, 0) CANTIDADES_FACTURADAS, 
			 COALESCE(C1.MES, F1.MES) MES, 
			 COALESCE(EL_KUELGUE.OBTENER_MES(C1.MES), EL_KUELGUE.OBTENER_MES(F1.MES)) NOMBRE_MES,
			 COALESCE(C1.ANIO, F1.ANIO) ANIO
	  FROM (SELECT F.SUCURSAL_CODIGO, COUNT(*) CANTIDADES_FACTURADAS, MES, ANIO
			FROM EL_KUELGUE.BI_HECHOS_FACTURAS_AUTOMOVILES F JOIN EL_KUELGUE.BI_FACTURA_FECHA FECHA ON F.FACTURA_FECHA = FECHA.ID_FACTURA_FECHA
			GROUP BY F.SUCURSAL_CODIGO, MES, ANIO) F1
FULL OUTER JOIN 
			(SELECT C.SUCURSAL_CODIGO, COUNT(*) CANTIDADES_COMPRADAS, MES, ANIO
			 FROM EL_KUELGUE.BI_HECHOS_COMPRAS_AUTOMOVILES C JOIN EL_KUELGUE.BI_COMPRA_FECHA FECHA ON C.COMPRA_FECHA = FECHA.ID_COMPRA_FECHA
			 GROUP BY C.SUCURSAL_CODIGO, MES, ANIO) C1
ON (F1.SUCURSAL_CODIGO = C1.SUCURSAL_CODIGO AND F1.MES = C1.MES AND F1.ANIO = C1.ANIO)) A
GO

IF OBJECT_ID ('EL_KUELGUE.BI_REPORTE_BALANCES_AUTOMOVILES_V', 'V') IS NOT NULL  
   DROP VIEW EL_KUELGUE.BI_REPORTE_BALANCES_AUTOMOVILES_V; 
GO

CREATE VIEW EL_KUELGUE.BI_REPORTE_BALANCES_AUTOMOVILES_V
(SUCURSAL, MONTO_COMPRADO, MONTO_FACTURADO, BALANCE, MES, NOMBRE_MES, ANIO)
AS
SELECT SUCURSAL_CODIGO, MONTO_COMPRADO, MONTO_FACTURADO, 
	   (MONTO_FACTURADO - MONTO_COMPRADO) BALANCE, MES, EL_KUELGUE.OBTENER_MES(MES) NOMBRE_MES, ANIO
FROM (SELECT COALESCE(C1.SUCURSAL_CODIGO, F1.SUCURSAL_CODIGO) SUCURSAL_CODIGO, 
			 COALESCE(MONTO_COMPRADO, 0) MONTO_COMPRADO, 
			 COALESCE(MONTO_FACTURADO, 0) MONTO_FACTURADO,
			 COALESCE(C1.MES, F1.MES) MES,
			 COALESCE(C1.ANIO, F1.ANIO) ANIO
	  FROM (SELECT F.SUCURSAL_CODIGO, SUM(MONTO_FACTURADO) MONTO_FACTURADO, MES, ANIO
			FROM EL_KUELGUE.BI_HECHOS_FACTURAS_AUTOMOVILES F JOIN EL_KUELGUE.BI_FACTURA_FECHA FECHA ON F.FACTURA_FECHA = FECHA.ID_FACTURA_FECHA
			GROUP BY F.SUCURSAL_CODIGO, MES, ANIO) F1
	  FULL OUTER JOIN 
			(SELECT C.SUCURSAL_CODIGO, SUM(MONTO_COMPRADO) MONTO_COMPRADO, MES, ANIO
			 FROM EL_KUELGUE.BI_HECHOS_COMPRAS_AUTOMOVILES C JOIN EL_KUELGUE.BI_COMPRA_FECHA FECHA ON C.COMPRA_FECHA = FECHA.ID_COMPRA_FECHA
			 GROUP BY C.SUCURSAL_CODIGO, MES, ANIO) C1
	  ON (F1.SUCURSAL_CODIGO = C1.SUCURSAL_CODIGO AND F1.MES = C1.MES AND F1.ANIO = C1.ANIO)) A
GO

---------------------------------------------------------------------------------------
-- Precio promedio de automóviles, vendidos y comprados.

IF OBJECT_ID ('EL_KUELGUE.BI_REPORTE_PRECIO_PROMEDIO_AUTOMOVILES_V', 'V') IS NOT NULL  
   DROP VIEW EL_KUELGUE.BI_REPORTE_PRECIO_PROMEDIO_AUTOMOVILES_V; 
GO

CREATE VIEW EL_KUELGUE.BI_REPORTE_PRECIO_PROMEDIO_AUTOMOVILES_V
(MODELO_CODIGO, PRECIO_PROMEDIO_COMPRAS, PRECIO_PROMEDIO_VENTAS)
AS
SELECT COALESCE(C.MODELO_CODIGO, F.MODELO_CODIGO) MODELO_CODIGO,
	   COALESCE(PRECIO_PROMEDIO_COMPRAS, 0) PRECIO_PROMEDIO_COMPRAS,
	   COALESCE(PRECIO_PROMEDIO_VENTAS, 0) PRECIO_PROMEDIO_VENTAS
FROM (SELECT MODELO_CODIGO, SUM(MONTO_FACTURADO) / COUNT(MODELO_CODIGO) PRECIO_PROMEDIO_VENTAS
	  FROM EL_KUELGUE.BI_HECHOS_FACTURAS_AUTOMOVILES
	  GROUP BY MODELO_CODIGO) F
JOIN (SELECT MODELO_CODIGO, SUM(MONTO_COMPRADO) / COUNT(MODELO_CODIGO) PRECIO_PROMEDIO_COMPRAS
	  FROM EL_KUELGUE.BI_HECHOS_COMPRAS_AUTOMOVILES
	  GROUP BY MODELO_CODIGO) C
ON C.MODELO_CODIGO = F.MODELO_CODIGO
GO

------------------------------------------------------------------------------------------------------------------------------------
-- Promedio de tiempo en stock de cada modelo de automóvil

IF OBJECT_ID ('EL_KUELGUE.BI_REPORTE_PROMEDIO_TIEMPO_EN_STOCK_CADA_AUTOMOVIL_V', 'V') IS NOT NULL  
   DROP VIEW EL_KUELGUE.BI_REPORTE_PROMEDIO_TIEMPO_EN_STOCK_CADA_AUTOMOVIL_V; 
GO

CREATE VIEW EL_KUELGUE.BI_REPORTE_PROMEDIO_TIEMPO_EN_STOCK_CADA_AUTOMOVIL_V
(MODELO_CODIGO, PROMEDIO_DE_DIAS)
AS
SELECT MODELO_CODIGO, AVG(DATEDIFF(dd, COMPRA_FECHA, FACTURA_FECHA)) PROMEDIO_DE_DIAS
FROM (SELECT ca.MODELO_CODIGO, COMPRA_FECHA, COALESCE(FACTURA_FECHA, GETDATE()) FACTURA_FECHA
	  FROM EL_KUELGUE.BI_HECHOS_COMPRAS_AUTOMOVILES ca 
	  JOIN EL_KUELGUE.BI_HECHOS_FACTURAS_AUTOMOVILES fa ON ca.AUTO_CODIGO = fa.AUTO_CODIGO) A
GROUP BY MODELO_CODIGO
GO

--------------------------------------------------------------------------------------
-- Precio promedio de autopartes, vendidos y comprados.

IF OBJECT_ID ('EL_KUELGUE.BI_REPORTE_PRECIO_PROMEDIO_AUTO_PARTES_V', 'V') IS NOT NULL  
   DROP VIEW EL_KUELGUE.BI_REPORTE_PRECIO_PROMEDIO_AUTO_PARTES_V; 
GO

CREATE VIEW EL_KUELGUE.BI_REPORTE_PRECIO_PROMEDIO_AUTO_PARTES_V
(AUTO_PARTE_CODIGO, PRECIO_PROMEDIO_COMPRAS, PRECIO_PROMEDIO_VENTAS)
AS
SELECT COALESCE(C.AUTO_PARTE_CODIGO, F.AUTO_PARTE_CODIGO) AUTO_PARTE_CODIGO, 
	   COALESCE(PRECIO_PROMEDIO_COMPRAS, 0) PRECIO_PROMEDIO_COMPRAS, 
	   COALESCE(PRECIO_PROMEDIO_VENTAS, 0) PRECIO_PROMEDIO_VENTAS
FROM (SELECT AUTO_PARTE_CODIGO, COUNT(AUTO_PARTE_CODIGO) CANTIDADES_VENDIDAS,
	  SUM(PRECIO_UNITARIO * CANTIDAD_FACTURADA) / COUNT(AUTO_PARTE_CODIGO) PRECIO_PROMEDIO_VENTAS
	  FROM EL_KUELGUE.BI_HECHOS_FACTURAS_AUTO_PARTES
	  GROUP BY AUTO_PARTE_CODIGO) F
FULL OUTER JOIN (SELECT AUTO_PARTE_CODIGO, COUNT(AUTO_PARTE_CODIGO) CANTIDADES_COMPRADAS, 
	 SUM(PRECIO_UNITARIO * CANTIDAD_COMPRADA) / COUNT(AUTO_PARTE_CODIGO) PRECIO_PROMEDIO_COMPRAS
	  FROM EL_KUELGUE.BI_HECHOS_COMPRAS_AUTO_PARTES
	  GROUP BY AUTO_PARTE_CODIGO) C
ON (F.AUTO_PARTE_CODIGO = C.AUTO_PARTE_CODIGO)
GO

--------------------------------------------------------------------------------------
-- Ganancias de automoviles,  x sucursal y mes

IF OBJECT_ID ('EL_KUELGUE.BI_REPORTE_GANANCIAS_AUTOMOVILES_V', 'V') IS NOT NULL  
   DROP VIEW EL_KUELGUE.BI_REPORTE_GANANCIAS_AUTOMOVILES_V; 
GO

CREATE VIEW EL_KUELGUE.BI_REPORTE_GANANCIAS_AUTOMOVILES_V
(SUCURSAL_CODIGO, GANANCIAS, MES, NOMBRE_MES, ANIO)
AS
SELECT SUCURSAL_CODIGO,SUM(MONTO_FACTURADO-MONTO_COMPRADO)GANANCIAS,MES,EL_KUELGUE.OBTENER_MES(MES)NOMBRE_MES,ANIO 
FROM (SELECT F1.SUCURSAL_CODIGO ,F1.AUTO_CODIGO,MONTH(FACTURA_FECHA) MES,YEAR(FACTURA_FECHA) ANIO,MONTO_FACTURADO,MONTO_COMPRADO
      FROM EL_KUELGUE.BI_HECHOS_COMPRAS_AUTOMOVILES C1 JOIN EL_KUELGUE.BI_HECHOS_FACTURAS_AUTOMOVILES F1 ON(F1.AUTO_CODIGO = C1.AUTO_CODIGO)) A
GROUP BY SUCURSAL_CODIGO, MES, ANIO
GO

--------------------------------------------------------------------------------------
-- Ganancias de autopartes,  x sucursal y mes

IF OBJECT_ID ('EL_KUELGUE.BI_REPORTE_GANANCIAS_AUTOPARTES_V', 'V') IS NOT NULL  
   DROP VIEW EL_KUELGUE.BI_REPORTE_GANANCIAS_AUTOPARTES_V; 
GO

CREATE VIEW EL_KUELGUE.BI_REPORTE_GANANCIAS_AUTOPARTES_V
(SUCURSAL_CODIGO,GANANCIAS, MES, NOMBRE_MES, ANIO)
AS
SELECT SUCURSAL_CODIGO, SUM(MONTO_FACTURADO - MONTO_COMPRADO) GANANCIAS, MES, EL_KUELGUE.OBTENER_MES(MES) NOMBRE_MES, ANIO 
FROM (SELECT F1.SUCURSAL_CODIGO, F1.AUTO_PARTE_CODIGO, 
	  MONTH(FACTURA_FECHA) MES, YEAR(FACTURA_FECHA) ANIO, 
	  (F1.PRECIO_UNITARIO * CANTIDAD_FACTURADA) MONTO_FACTURADO, 
	  (C1.PRECIO_UNITARIO * CANTIDAD_COMPRADA) MONTO_COMPRADO
      FROM EL_KUELGUE.BI_HECHOS_COMPRAS_AUTO_PARTES C1 JOIN EL_KUELGUE.BI_HECHOS_FACTURAS_AUTO_PARTES F1 ON(F1.AUTO_PARTE_CODIGO = C1.AUTO_PARTE_CODIGO)) A
GROUP BY SUCURSAL_CODIGO,MES,ANIO
GO

--------------------------------------------------------------------------------------
-- Maxima cantidad de stock de autopartes por cada sucursal(anual)

IF OBJECT_ID ('EL_KUELGUE.BI_REPORTE_STOCK_MAXIMO_ANUAL_AUTOPARTES_V', 'V') IS NOT NULL  
   DROP VIEW EL_KUELGUE.BI_REPORTE_STOCK_MAXIMO_ANUAL_AUTOPARTES_V; 
GO

CREATE VIEW EL_KUELGUE.BI_REPORTE_STOCK_MAXIMO_ANUAL_AUTOPARTES_V
(SUCURSAL_CODIGO, STOCK, ANIO)
AS
SELECT SUCURSAL_CODIGO, ANIO, MAX(CANTIDAD_COMPRADA - CANTIDAD_FACTURADA) STOCK
FROM (SELECT COALESCE(F1.SUCURSAL_CODIGO, C1.SUCURSAL_CODIGO) SUCURSAL_CODIGO, 
			 COALESCE(F1.MES, C1.MES) MES, 
			 COALESCE(F1.ANIO, C1.ANIO) ANIO, 
			 COALESCE(CANTIDAD_FACTURADA, 0) CANTIDAD_FACTURADA,
			 COALESCE(CANTIDAD_COMPRADA, 0) CANTIDAD_COMPRADA
	  FROM (SELECT SUCURSAL_CODIGO, MES, ANIO, SUM(CANTIDAD_FACTURADA) CANTIDAD_FACTURADA
			FROM EL_KUELGUE.BI_HECHOS_FACTURAS_AUTO_PARTES F JOIN EL_KUELGUE.BI_FACTURA_FECHA FECHA ON F.FACTURA_FECHA = FECHA.ID_FACTURA_FECHA
			GROUP BY SUCURSAL_CODIGO, MES, ANIO) F1
FULL OUTER JOIN (SELECT SUCURSAL_CODIGO, MES, ANIO, SUM(CANTIDAD_COMPRADA) CANTIDAD_COMPRADA
				 FROM EL_KUELGUE.BI_HECHOS_COMPRAS_AUTO_PARTES C JOIN EL_KUELGUE.BI_COMPRA_FECHA FECHA ON C.COMPRA_FECHA = FECHA.ID_COMPRA_FECHA
				 GROUP BY SUCURSAL_CODIGO, MES, ANIO) C1
ON (F1.SUCURSAL_CODIGO = C1.SUCURSAL_CODIGO AND F1.MES = C1.MES AND F1.ANIO = C1.ANIO)) A
GROUP BY SUCURSAL_CODIGO, ANIO
GO
